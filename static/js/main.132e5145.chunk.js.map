{"version":3,"sources":["components/Gallery/Poloroid/PictureFrame.js","components/Gallery/Poloroid/Caption.js","components/Gallery/Poloroid/Poloroid.js","components/Gallery/Poloroid/index.js","components/Gallery/Gallery.js","components/Gallery/config.js","components/Gallery/index.js","components/Navigation/index.js","components/Navigation/Navigation.js","components/Search/index.js","components/Search/Search.js","App.js","registerServiceWorker.js","index.js","components/Gallery/Poloroid/poloroid_frame-trans.png","components/Gallery/photo-box.png","components/Navigation/poloroid_frame.jpg"],"names":["PictureFrame","props","offset","widths","map","width","Img","styled","div","_templateObject","image","url","react_default","a","createElement","Caption","Figcaption","figcaption","Caption_templateObject","A","_templateObject2","H3","h3","_templateObject3","href","desc","Poloroid","cardWidths","Figure","figure","Poloroid_templateObject","poloroid","Poloroid_PictureFrame","Poloroid_Caption","getImageUrl","entry","URL","concat","server","id","secret","farm","toString","callAPI","fetch","base","params","method","api_key","text","match","search","format","nojsoncallback","Object","entries","reduce","acc","_ref","_ref2","slicedToArray","key","value","searchParams","append","then","statusCode","response","status","reject","json","_ref3","photos","photo","title","filter","index","catch","err","console","log","Gallery","state","images","_this2","this","setState","nextProps","_this3","Div","Gallery_templateObject","photoBox","Gallery_Poloroid","Component","Nav","Navigation_templateObject","GalleryNavLink","NavLink","Navigation_templateObject2","activeStyle","color","to","Search","handleSubmit","event","preventDefault","_this","history","push","target","children","Form","form","Search_templateObject","Input","input","Search_templateObject2","Legend","legend","Search_templateObject3","onSubmit","type","name","App","App_templateObject","Header","App_templateObject2","BrowserRouter","Route","component","Navigation","Switch","path","Redirect","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","process","origin","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.132e5145.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst PictureFrame = props => {\n    //const offset = props.width / 18;\n    const offset = props.widths.map(width => width / 18);\n    const Img = styled.div`\n        background: url(${props.image.url});\n        background-repeat: no-repeat;\n        background-size: cover;\n        box-shadow: inset 0px 0px 50px 10px black;\n        overflow: hidden;\n        margin: ${offset[0] * (7 / 8)}vw 0 0 ${offset[0]}vw;\n        width: 91.5%;\n        height: 77%;\n        position: relative;\n        z-index: -5;\n        @media (min-width: 576px) {\n            margin: ${offset[1] * (7 / 8)}vw 0 0 ${offset[1]}vw;\n        }\n        @media (min-width: 1024px) {\n            margin: ${offset[2] * (7 / 8)}vw 0 0 ${offset[2]}vw;\n        }\n        @media (min-width: 1400px) {\n            margin: ${offset[3] * (7 / 8)}vw 0 0 ${offset[3]}vw;\n        }\n    `;\n\n    return <Img />;\n};\n\nexport default PictureFrame;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Caption = props => {\n    const Figcaption = styled.figcaption`\n        max-width: 80%;\n        word-wrap: break-word;\n        margin: 0 auto;\n        height: 17%;\n        overflow: scroll;\n    `;\n    const A = styled.a`\n        font-family: 'Permanent Marker', cursive;\n        text-decoration: none;\n        color: black;\n        font-size: larger;\n    `;\n    const H3 = styled.h3`margin: 0;`;\n\n    return (\n        <Figcaption>\n            <A href={props.image.url}>\n                <H3>\n                    {props.image.desc}\n                </H3>\n            </A>\n        </Figcaption>\n    );\n};\n\nexport default Caption;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PictureFrame from \"./PictureFrame\";\nimport poloroid from \"./poloroid_frame-trans.png\";\nimport Caption from \"./Caption\";\n\nconst Poloroid = props => {\n    let cardWidths = [75, 45, 28, 22];\n    const widthHeightRatio = 427 / 513;\n    const unit = \"%\";\n    const Figure = styled.figure`\n        margin-right: 0;\n        margin-left: 0;\n        width: ${cardWidths[0]}${unit};\n        height: ${cardWidths[0] / widthHeightRatio}vw;\n        background: url(${poloroid}) no-repeat center;\n        background-size: 100%;\n        box-shadow: 6px 6px 12px 8px black;\n        text-align: center;\n        position: relative;\n        @media (min-width: 576px) {\n            width: ${cardWidths[1]}${unit};\n            height: ${cardWidths[1] / widthHeightRatio}vw;\n        }\n        @media (min-width: 1024px) {\n            width: ${cardWidths[2]}${unit};\n            height: ${cardWidths[2] / widthHeightRatio}vw;\n        }\n        @media (min-width: 1400px) {\n            width: ${cardWidths[3]}${unit};\n            height: ${cardWidths[3] / widthHeightRatio}vw;\n        }\n    `;\n\n    return (\n        <Figure>\n            <PictureFrame widths={cardWidths} image={props.image} />\n            <Caption image={props.image} />\n        </Figure>\n    );\n};\n\nexport default Poloroid;\n","import Poloroid from \"./Poloroid\";\n\nexport default Poloroid;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Poloroid from \"./Poloroid\";\nimport photoBox from \"./photo-box.png\";\nimport api_key from \"./config.js\";\n\nconst expectResponse = statusCode => {\n    return response => {\n        if (response.status !== statusCode) {\n            return response.reject();\n        }\n        return response;\n    };\n};\n\nconst getUrl = (base, params) => {\n    const url = Object.entries(params).reduce((acc, [key, value]) => {\n        acc.searchParams.append(key, value);\n        return acc;\n    }, new URL(base));\n    return url;\n};\n\nconst getImageUrl = entry => {\n    return new URL(\n        `./${entry.server}/${entry.id}_${entry.secret}.jpg`,\n        `https://farm${entry.farm}.staticflickr.com/`\n    ).toString();\n};\n\nconst callAPI = props => {\n    return fetch(\n        getUrl(\"https://api.flickr.com/services/rest/\", {\n            method: \"flickr.photos.search\",\n            api_key: api_key,\n            text: props.match.params.search,\n            format: \"json\",\n            nojsoncallback: \"1\"\n        })\n    )\n        .then(expectResponse(200))\n        .then(response => response.json())\n        .then(({ photos }) => {\n            return photos.photo\n                .map(entry => ({\n                    url: getImageUrl(entry),\n                    desc: entry.title\n                }))\n                .filter((url, index) => index < 9);\n        })\n        .catch(err => console.log(err));\n};\n\nclass Gallery extends Component {\n\n    state = { images: [] }\n\n    componentDidMount() {\n        callAPI(this.props).then(images => this.setState({ images }));\n        // window.addEventListener(\"scroll\", this.handleScroll.bind(this));\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.match.params.search !== nextProps.match.params.search) {\n            callAPI(nextProps).then(images => this.setState({ images }));\n        }\n    }\n\n    // handleScroll = (event) => {\n    //     let gallery =\n    //         event.srcElement.body.children.root.children.page.children.gallery;\n    //     let scrollTop = gallery.scrollTop;\n    //     if (scrollTop - window.scrollY < 30) {\n    //         console.log(this.props);\n    //         debugger;\n    //         callAPI(this.props).then(images =>\n    //             this.setState({ images: [...this.state.images, ...images] })\n    //         );\n    //     }\n    // }\n\n    render() {\n        const Div = styled.div`\n            background: url(${photoBox});\n            display: flex;\n            flex-direction: row;\n            flex-wrap: wrap;\n            justify-content: space-evenly;\n            align-items: space-around;\n            width: 100%;\n            height: 100vh;\n            background-position: 0px 0px;\n            background-size: 100% 100%;\n            background-attachment: absolute;\n            background-repeat: no-repeat;\n            overflow: scroll;\n            padding-top: 220px;\n            position: relative;\n            z-index: 0;\n            @media (min-width: 726px) {\n                padding-top: 150px;\n            }\n        `;\n        return (\n            <Div id=\"gallery\">\n                {this.state.images.map((image, index) =>\n                    <Poloroid key={index} image={image} />\n                )}\n            </Div>\n        );\n    }\n}\n\nexport default Gallery;\n","export default \"707936c550a70a30c9c4f3f0c46d4415\";","import Gallery from \"./Gallery\";\n\nexport default Gallery;\n","import Nav from \"./Navigation\";\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport poloroid from \"./poloroid_frame.jpg\";\n\nclass Navigation extends Component {\n    render() {\n        const Div = styled.div`\n            display: flex;\n            justify-content: space-around;\n            align-items: center;\n            z-index: 10;\n            width: 100%;\n        `;\n        const GalleryNavLink = styled(NavLink)`\n            display: flex;\n            z-index: 10;\n            align-items: center;\n            justify-content: center;\n            font-family: 'Permanent Marker', cursive;\n            text-align: center;\n            text-decoration: none;\n            color: white;\n            font-size: larger;\n            background: url(${poloroid}) center;\n            background-size: 100%;\n            height: 145px;\n            width: 120px;\n            margin-top: 20px;\n            @media(min-width: 726px) {\n                margin-top: 15px;\n            }\n        `;\n        return (\n            <Div>\n                <GalleryNavLink activeStyle={{ color: \"red\" }} to=\"/react-polaroid-flickr-gallery/sunsets\">\n                    Sunsets\n                </GalleryNavLink>\n                <GalleryNavLink activeStyle={{ color: \"red\" }} to=\"/react-polaroid-flickr-gallery/balloons\">\n                    Balloons\n                </GalleryNavLink>\n                <GalleryNavLink activeStyle={{ color: \"red\" }} to=\"/react-polaroid-flickr-gallery/puppies\">\n                    Puppies\n                </GalleryNavLink>\n            </Div>\n        );\n    }\n}\n\nexport default Navigation;\n","import Search from \"./Search\";\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nclass Search extends Component {\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.history.push(`/react-polaroid-flickr-gallery/${event.target.children.search.value}`);\n    }\n\n    render() {\n        const Form = styled.form`\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            width: 100%;\n        `;\n        const Input = styled.input`\n            width: 90%;\n            border: 5px solid;\n            border-radius: 8px;\n            height: 24px;\n            font-size: 18px;\n            &:focus {\n                outline: none;\n            }\n        `;\n        const Legend = styled.legend`\n            font-family: 'Permanent Marker', cursive;\n            font-size: 30px;\n        `;\n        return (\n            <Form key=\"form\" onSubmit={this.handleSubmit}>\n                <Legend>Polaroid Flickr</Legend>\n                <Input type=\"text\" name=\"search\" />\n            </Form>\n        );\n    }\n}\nexport default Search;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Gallery, Navigation, Search } from \"./components\";\n\nclass App extends Component {\n    render() {\n        const Div = styled.div`\n            display: grid;\n            width: 100vw;\n            min-height: 100vh;\n            margin: 0;\n            padding: 0;\n            grid-template-rows: 100px 200px auto;\n        `;\n        const Header = styled.div`\n            display: flex;\n            position: fixed;\n            flex-direction: column;\n            z-index: 50;\n            width: 100%;\n            background: linear-gradient(to bottom, white 80%, transparent 85%);\n            @media (min-width: 726px) {\n                flex-direction: row;\n            }\n        `;\n        return (\n            <BrowserRouter>\n                <Div id=\"page\">\n                    <Header>\n                        <Route component={Search} />\n                        <Route component={Navigation} />\n                    </Header>\n                    <Switch>\n                        <Route path=\"/react-polaroid-flickr-gallery/:search\" component={Gallery} />\n                        <Redirect to=\"/react-polaroid-flickr-gallery/treehouse\" />\n                    </Switch>\n                </Div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/poloroid_frame-trans.7c86b187.png\";","module.exports = __webpack_public_path__ + \"static/media/photo-box.8e1be60f.png\";","module.exports = __webpack_public_path__ + \"static/media/poloroid_frame.a6fe14df.jpg\";"],"sourceRoot":""}